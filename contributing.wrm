# 贡献和处理 @<关于-贡献> @priority<-90>

欢迎提交 PR ，但请注意以下事项：

- 不接受向后兼容性更改的更改；它们可能会被考虑在下一个主要版本中使用
- 安全性很重要；添加依赖需要相当有说服力的论据
- 该库旨在精简，因此请在你更改前后关注``dist/ethers.min.js``文件大小（``build-clean``目标包括这些统计信息）
- 保持 PR 的简单、可读性，并将其限制在相关的文件；关于要修改的文件见下文
- 为预期和意外的输入添加测试案例
- 任何新功能都需要得到我的支持（未来的问题、文档、测试、迁移），因此任何过于复杂或特定的内容可能不会被接受
- 每个人都在努力工作；**请保持友好和尊重**

//强烈建议//你在开始 PR **之前**先开启一个[[link-discussion]]


## 文档  @<关于-贡献-文档>

文档是一个始终可以从额外的视角，额外的知识和额外的示例中受益的地方

对文档的贡献是受欢迎的

在对文档进行更改时，请确保所有更改**仅限**于

- 更新``/docs.wrm/*\*.wrm``
- 添加链接: ``/docs.wrm/links/*.txt``
- 更新 API jsdocs：在 ``/src.ts/`` 中的 ``/*\* ... */`` 注释块

通常不应对 ``/docs.wrm/config.wrm`` 进行更改，如果你认为有必要，请考虑先开启一个[[link-discussion]]。

同样，在添加新章节时，更倾向于先开启一个[[link-discussion]]

所有更改都应该使用 Flatworm Markdown Dialect


## 修改漏洞  @<关于-贡献-漏洞>

一般来说，您在 PR 中**唯一**应该包含的文件是：

- TypeScript 源码: ``/src.ts/*\*.ts``

不要包含带有更新``tarballHash``或``version``的``package.json``，也不要在 PR 中包含任何生成的文件。

漏洞修复**不能**修改任何需要一个次版本升级的内容（详见[[关于-贡献-功能]]），例如更改方法签名或更改导出


## 增加功能  @<关于-贡献-功能>

贡献新功能通常需要对Ethers及其组件内部交互更深入的理解，并且通常需要一个包含了所有内容的次版本升级

在进行以下任何更改时，您必须首先开启一个[[link-discussion]]，因为需要升级次版本

- 任何签名更改（例如添加参数，更改参数类型，更改返回类型）
- 添加任何新的导出；例如类，函数或常量
- 向任何类添加任何方法
- 更改 ``package.json`` 中的任何 ``exports`` 属性

这种类型的更改应该在经过认真考虑和讨论之后才进行


## 搭建  @<搭建>

``` @lang<shell>
  /home/ricmoo> git clone @TODO
  /home/ricmoo> cd ethers
  /home/ricmoo/ethers> npm install
  /home/ricmoo/ethers> npm run auto-build




## 预览文档
